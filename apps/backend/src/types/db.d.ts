/**
 * This file was generated by kysely-codegen.
 * Please do not edit it manually.
 */

import type { ColumnType } from "kysely";

export type EventImageType = "flyer" | "hero";

export type EventTicketCurrency = "USD" | "UYU";

export type Generated<T> = T extends ColumnType<infer S, infer I, infer U>
  ? ColumnType<S, I | undefined, U>
  : ColumnType<T, T | undefined, T>;

export type Json = JsonValue;

export type JsonArray = JsonValue[];

export type JsonObject = {
  [x: string]: JsonValue | undefined;
};

export type JsonPrimitive = boolean | number | string | null;

export type JsonValue = JsonArray | JsonObject | JsonPrimitive;

export type Numeric = ColumnType<string, number | string, number | string>;

export type Timestamp = ColumnType<Date, Date | string, Date | string>;

export interface EventImages {
  createdAt: Generated<Timestamp>;
  deletedAt: Timestamp | null;
  displayOrder: Generated<number>;
  eventId: string;
  id: Generated<string>;
  imageType: EventImageType;
  url: string;
}

export interface Events {
  createdAt: Generated<Timestamp>;
  deletedAt: Timestamp | null;
  description: string | null;
  eventEndDate: Timestamp;
  eventStartDate: Timestamp;
  externalId: string;
  externalUrl: string;
  id: Generated<string>;
  lastScrapedAt: Generated<Timestamp>;
  metadata: Json | null;
  name: string;
  platform: string;
  status: Generated<string>;
  updatedAt: Generated<Timestamp>;
  venueAddress: string;
  venueName: string | null;
}

export interface EventTicketWaves {
  createdAt: Generated<Timestamp>;
  currency: EventTicketCurrency;
  deletedAt: Timestamp | null;
  description: string | null;
  eventId: string;
  externalId: string;
  faceValue: Numeric;
  id: Generated<string>;
  isAvailable: Generated<boolean>;
  isSoldOut: Generated<boolean>;
  lastScrapedAt: Generated<Timestamp>;
  metadata: Json | null;
  name: string;
  status: Generated<string>;
  updatedAt: Generated<Timestamp>;
}

export interface Users {
  clerkId: string;
  createdAt: Generated<Timestamp>;
  deletedAt: Timestamp | null;
  email: string;
  firstName: string | null;
  id: Generated<string>;
  imageUrl: string | null;
  lastActiveAt: Timestamp | null;
  lastName: string | null;
  metadata: Json | null;
  updatedAt: Generated<Timestamp>;
}

export interface DB {
  eventImages: EventImages;
  events: Events;
  eventTicketWaves: EventTicketWaves;
  users: Users;
}
